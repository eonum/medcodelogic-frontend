
@startuml
actor User
control Router <<@angular>> #orange

entity LanguageGuard #lightgreen
entity TranslateService <<Plugin>> #orange
entity CatalogResolver #lightgreen
entity CatalogVersionService as VersionService #lightgreen
'database search.eonum <<REST API>> #orange
participant AppComponent #lightblue
participant MainComponent #lightblue
participant SearchFormComponent #lightblue
participant SearchResultsComponent as ResultsComp #lightblue
entity CatalogSearchService as SearchService #lightgreen

== Load Page, resolve and validate language, catalog and version (Without Hierarchy loading) ==

User -> Router: /
activate Router #orange

activate VersionService #lightgreen
Router -> VersionService
VersionService -> VersionService: loadVersions()
note left #lightgrey
    from 'assets/versions.json'
end note
VersionService --> Router
deactivate VersionService

create AppComponent
Router ->> AppComponent: init
activate AppComponent #lightblue
AppComponent --> Router
deactivate AppComponent

Router -> LanguageGuard: canActivate()?
activate LanguageGuard #lightgreen

LanguageGuard ->> Router: navigate('de')
note right #lightgrey
    get language from cookie,browser or default
end note
deactivate LanguageGuard

Router -> LanguageGuard: canActivate('de)?

activate LanguageGuard #lightgreen
LanguageGuard ->> TranslateService: setLanguage(de)
LanguageGuard --> Router: grant access
deactivate LanguageGuard

Router -> Router: redirectTo('ICD')
Router ->> CatalogResolver: resolve('de', 'ICD')

activate CatalogResolver #lightgreen
CatalogResolver -> CatalogResolver: getActiveVersion('de', 'ICD')
CatalogResolver ->> Router: navigate('ICD', '2016')
deactivate CatalogResolver

Router ->> CatalogResolver: resolve('de', 'ICD', '2016')

activate CatalogResolver #lightgreen
CatalogResolver -> VersionService: versionExists('de', 'ICD', '2016')
activate VersionService #lightgreen
VersionService -> CatalogResolver: true
deactivate VersionService

note left #lightgrey
    If catalog or version does not match,
    redirect to index.
end note

CatalogResolver -> CatalogResolver: activateVersion ('de', 'ICD', '2016')
CatalogResolver --> Router: displayInfos: CatalogDisplayInfos[]


deactivate CatalogResolver

create MainComponent
Router -> MainComponent: init
activate MainComponent #lightblue

MainComponent ->> Router: subscribeh to changes
Router ->> MainComponent: {params:{'de', 'ICD', '2016' }, queryParams{query}}

create SearchFormComponent
MainComponent ->> SearchFormComponent: init
activate SearchFormComponent #lightblue

SearchFormComponent -> Router: subscribe to changes
Router ->> SearchFormComponent: {data:{displayInfos},params:{'de', 'ICD', '2016' }, queryParams{query}}
SearchFormComponent -> SearchFormComponent: display catalog selection
SearchFormComponent --> MainComponent
deactivate SearchFormComponent

create ResultsComp
MainComponent ->> ResultsComp : init
activate ResultsComp  #lightblue

ResultsComp -> Router: subscribe to changes
Router ->> ResultsComp: {params:{'de', 'ICD', '2016' }, queryParams{query}}

ResultsComp  ->> SearchService: subscribe to changes
activate SearchService #lightgrey

group search query in route params

    ResultsComp  -> SearchService: search('de', 'ICD', '2016', query)
    activate SearchService #lightgreen

    note over SearchService
    do search
    end note

    SearchService --> ResultsComp: searchResults:CatalogElement[]
    deactivate SearchService #lightgreen
    ResultsComp  -> ResultsComp : display results

end

ResultsComp --> MainComponent
deactivate ResultsComp

deactivate SearchService

MainComponent --> Router
deactivate MainComponent

Router --> User: display
deactivate Router



@enduml

